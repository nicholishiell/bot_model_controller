#include <stdio.h>
#include <stdlib.h>
#include <string>

#include "StateEvade.h"
#include "FSM.h"

StateEvade::StateEvade(){
  name = "Evade"; 
  deltaT = 10.;

  time(&timeStamp);
  timerExpired = false;
}

void StateEvade::Enter(){};
void StateEvade::Execute(StateManager* fsm){
  if(fsm->MovingForward()){
    fsm->SetTransSpeed(-1);
    fsm->SetRotSpeed(-1.);
  }
  else{
    fsm->SetTransSpeed(1);
    fsm->SetRotSpeed(1.);
  }
};
void StateEvade::Exit(){};

// seePuck, havePuck, seeGoal, atGoal, movingForward, puck2Close2Goal, prox
State * StateEvade::Transition(bool* stimuli){
  time_t currentTime;
  time(&currentTime);
  if(difftime(currentTime, timeStamp) > deltaT){
    timerExpired = true;
  }
  
  if(!timerExpired){
    return NULL;
  }
  else if(!stimuli[0] && !stimuli[1]){
    return new StateSearchPuck();
  }
  else if(stimuli[0] && !stimuli[1]){
    return new StateTrackPuck();
  }
  else if(!stimuli[2] && stimuli[1]){
    return new StateSearchGoal();
  }
  else if(stimuli[0] && stimuli[1]){
    return new StateTrackGoal();
  }
  else{}
  
};

void StateEvade::Print(){
  printf("%s\n",name.c_str());
};
